# Set wd
setwd("C:/Users/perezalo/OneDrive - Tilburg University/1. Papers/Paper 2/Methodology (Journal)/Review/Simulation results/ModelSelection_Simulation/Post-Review/K1/Results")
View(results_matrix)
load("C:/Users/perezalo/OneDrive - Tilburg University/1. Papers/Paper 2/Methodology (Journal)/Review/Simulation results/ModelSelection_Simulation/Post-Review/K1/Fit/FitRow1Rep3-1.Rdata")
results$Overview
mean(x = results_matrix$Scree[is.finite(results_matrix$Scree)])
plot(results$Overview$nrpar, results$Overview$LL); lines(results$Overview$nrpar, results$Overview$LL)
load("C:/Users/perezalo/OneDrive - Tilburg University/1. Papers/Paper 2/Methodology (Journal)/Review/Simulation results/ModelSelection_Simulation/Post-Review/K1/Fit/FitRow16Rep54-1.Rdata")
plot(results$Overview$nrpar, results$Overview$LL); lines(results$Overview$nrpar, results$Overview$LL)
results$Overview
load("C:/Users/perezalo/OneDrive - Tilburg University/1. Papers/Paper 2/Methodology (Journal)/Review/Simulation results/ModelSelection_Simulation/Post-Review/K1/Fit/FitRow15Rep36-2.Rdata")
plot(results$Overview$nrpar, results$Overview$LL); lines(results$Overview$nrpar, results$Overview$LL)
load("C:/Users/perezalo/OneDrive - Tilburg University/1. Papers/Paper 2/Methodology (Journal)/Review/Simulation results/ModelSelection_Simulation/Post-Review/K1/Fit/FitRow14Rep83-2.Rdata")
plot(results$Overview$nrpar, results$Overview$LL); lines(results$Overview$nrpar, results$Overview$LL)
# Load libraries
library(tidyr)
# Load design matrix
# Set wd
setwd("C:/Users/perezalo/OneDrive - Tilburg University/1. Papers/Paper 2/Methodology (Journal)/Review/Simulation results/ModelSelection_Simulation/Post-Review/K1/Results")
load("design.Rdata")
# # Define relevant objects
ncond <- unique(Results_final$Condition) # How many conditions?
# # Define relevant objects
ncond <- nrow(design) # How many conditions?
K     <- 100 # How many replications?
# Load design matrix
# Set wd
setwd("C:/Users/perezalo/OneDrive - Tilburg University/1. Papers/Paper 2/Methodology (Journal)/Review/Simulation results/ModelSelection_Simulation/Post-Review/All (50+50)/Results")
load("design.Rdata")
# # Define relevant objects
ncond <- nrow(design) # How many conditions?
K     <- 100 # How many replications?
# Create a matrix to store the maximum scree ratio
results_matrix <- matrix(data = NA,
nrow = (n_cond * K),
ncol = 5)
# Create a matrix to store the maximum scree ratio
results_matrix <- matrix(data = NA,
nrow = (ncond * K),
ncol = 5)
colnames(results_matrix)   <- c("Condition", "Replication", "AIC", "Chull", "True")
results_matrix             <- as.data.frame(results_matrix)
results_matrix$Condition   <- rep(x = 1:18, each = 100)
# Load libraries
library(tidyr)
# Load design matrix
# Set wd
setwd("C:/Users/perezalo/OneDrive - Tilburg University/1. Papers/Paper 2/Methodology (Journal)/Review/Simulation results/ModelSelection_Simulation/Post-Review/All (50+50)/Results")
load("design.Rdata")
# # Define relevant objects
ncond <- nrow(design) # How many conditions?
K     <- 100 # How many replications?
# Create a matrix to store the maximum scree ratio
results_matrix <- matrix(data = NA,
nrow = (ncond * K),
ncol = 5)
colnames(results_matrix)   <- c("Condition", "Replication", "AIC", "Chull", "True")
results_matrix             <- as.data.frame(results_matrix)
results_matrix$Condition   <- rep(x = 1:144, each = 100)
results_matrix$Replication <- rep(x = 1:100, times = 144)
View(results_matrix)
results_matrix$True        <- rep(x = design$nclus, each = 100)
View(design)
View(results_matrix)
# Load results and input into the matrix
# Prepare new load function
loadRData <- function(fileName){
#loads an RData file, and returns it
load(fileName)
get(ls()[ls() != "fileName"])
}
load("C:/Users/perezalo/OneDrive - Tilburg University/1. Papers/Paper 2/Methodology (Journal)/Review/Simulation results/ModelSelection_Simulation/Post-Review/All (50+50)/Fit/FitRow1Rep9-1.Rdata")
load("C:/Users/perezalo/OneDrive - Tilburg University/1. Papers/Paper 2/Methodology (Journal)/Review/Simulation results/ModelSelection_Simulation/Post-Review/All (50+50)/Fit/FitRow1Rep54-.Rdata")
a <- c(sample(x = 1:10, size = 10))
a
sort(a)
sort(a, decreasing = T)
a %in% sort(a, decreasing = T)[1:2]
which(a %in% sort(a, decreasing = T)[1:2])
which(a == sort(a, decreasing = T)[1:2])
which(a %in% sort(a, decreasing = T)[1:2])
ik <- 0
for(i in 1:ncond){
for(k in 1:1){
ik <- ik + 1
file <- list.files(pattern = paste0("^FitRow", i, "Rep", k, "-"), all.files = T)
results_row <- loadRData(file)
AIC_res     <- which(results_row$AIC %in% sort(results_row$AIC, decreasing = T)[1:2]) # Best two results
Chull_res   <- which(results_row$Chull %in% sort(results_row$Chull, decreasing = T)[1:2]) # Best two results
results_matrix[ik, "AIC"]   <- AIC_res
results_matrix[ik, "Chull"] <- Chull
}
}
setwd("C:/Users/perezalo/OneDrive - Tilburg University/1. Papers/Paper 2/Methodology (Journal)/Review/Simulation results/ModelSelection_Simulation/Post-Review/K1/Fit")
setwd("C:/Users/perezalo/OneDrive - Tilburg University/1. Papers/Paper 2/Methodology (Journal)/Review/Simulation results/ModelSelection_Simulation/Post-Review/All (50+50)/Fit")
ik <- 0
for(i in 1:ncond){
for(k in 1:1){
ik <- ik + 1
file <- list.files(pattern = paste0("^FitRow", i, "Rep", k, "-"), all.files = T)
results_row <- loadRData(file)
AIC_res     <- which(results_row$AIC %in% sort(results_row$AIC, decreasing = T)[1:2]) # Best two results
Chull_res   <- which(results_row$Chull %in% sort(results_row$Chull, decreasing = T)[1:2]) # Best two results
results_matrix[ik, "AIC"]   <- AIC_res
results_matrix[ik, "Chull"] <- Chull
}
}
View(results_matrix)
results_matrix[1, 3] <- c(2,2)
ik <- 0
for(i in 1:ncond){
for(k in 1:1){
ik <- ik + 1
file <- list.files(pattern = paste0("^FitRow", i, "Rep", k, "-"), all.files = T)
results_row <- loadRData(file)
AIC_res     <- list(which(results_row$AIC %in% sort(results_row$AIC, decreasing = T)[1:2])) # Best two results
Chull_res   <- list(which(results_row$Chull %in% sort(results_row$Chull, decreasing = T)[1:2])) # Best two results
results_matrix[ik, "AIC"]   <- AIC_res
results_matrix[ik, "Chull"] <- Chull
}
}
View(results_matrix)
results_row$Chull
results_matrix[1, 3] <- list(c(1, 2))
results_matrix[1, 3] <- list(1, 2)
results_matrix[1, 3] <- I(list(c(1, 2)))
results_matrix$AIC         <- I(vector(mode = "list", length = 2))
View(results_matrix)
results_matrix[1, 3] <- list(c(1, 2))
results_matrix$AIC         <- I(vector(mode = "list", length = 2))
results_matrix[1, 3][[1]] <- list(c(1, 2))
results_matrix$AIC[1]
results_matrix$AIC[[1]]
class(results_matrix$AIC[[1]])
# Load design matrix
# Set wd
setwd("C:/Users/perezalo/OneDrive - Tilburg University/1. Papers/Paper 2/Methodology (Journal)/Review/Simulation results/ModelSelection_Simulation/Post-Review/All (50+50)/Results")
load("design.Rdata")
# # Define relevant objects
ncond <- nrow(design) # How many conditions?
K     <- 100 # How many replications?
# Create a matrix to store the maximum scree ratio
results_matrix <- matrix(data = NA,
nrow = (ncond * K),
ncol = 5)
colnames(results_matrix)   <- c("Condition", "Replication", "AIC", "Chull", "True")
results_matrix             <- as.data.frame(results_matrix)
results_matrix$AIC         <- I(vector(mode = "list", length = 2))
results_matrix$Chull       <- I(vector(mode = "list", length = 2))
results_matrix$Condition   <- rep(x = 1:144, each = 100)
results_matrix$Replication <- rep(x = 1:100, times = 144)
results_matrix$True        <- rep(x = design$nclus, each = 100)
# Load results and input into the matrix
# Prepare new load function
loadRData <- function(fileName){
#loads an RData file, and returns it
load(fileName)
get(ls()[ls() != "fileName"])
}
setwd("C:/Users/perezalo/OneDrive - Tilburg University/1. Papers/Paper 2/Methodology (Journal)/Review/Simulation results/ModelSelection_Simulation/Post-Review/All (50+50)/Fit")
ik <- 0
for(i in 1:ncond){
for(k in 1:1){
ik <- ik + 1
file <- list.files(pattern = paste0("^FitRow", i, "Rep", k, "-"), all.files = T)
results_row <- loadRData(file)
AIC_res     <- list(which(results_row$AIC %in% sort(results_row$AIC, decreasing = T)[1:2])) # Best two results
Chull_res   <- list(which(results_row$Chull %in% sort(results_row$Chull, decreasing = T)[1:2])) # Best two results
results_matrix[ik, "AIC"][[1]]   <- AIC_res
results_matrix[ik, "Chull"][[1]] <- Chull
}
}
ik <- 0
for(i in 1:ncond){
for(k in 1:1){
ik <- ik + 1
file <- list.files(pattern = paste0("^FitRow", i, "Rep", k, "-"), all.files = T)
results_row <- loadRData(file)
AIC_res     <- list(which(results_row$AIC %in% sort(results_row$AIC, decreasing = T)[1:2])) # Best two results
Chull_res   <- list(which(results_row$Chull %in% sort(results_row$Chull, decreasing = T)[1:2])) # Best two results
results_matrix[ik, "AIC"][[1]]   <- AIC_res
results_matrix[ik, "Chull"][[1]] <- Chull_res
}
}
View(results_matrix)
View(results_matrix)
load("C:/Users/perezalo/OneDrive - Tilburg University/1. Papers/Paper 2/Methodology (Journal)/Review/Simulation results/ModelSelection_Simulation/Post-Review/All (50+50)/Fit/FitRow1Rep15-1.Rdata")
ik <- 0
for(i in 1:ncond){
for(k in 1:1){
browser()
ik <- ik + 1
file <- list.files(pattern = paste0("^FitRow", i, "Rep", k, "-"), all.files = T)
results_row <- loadRData(file)
AIC_res     <- list(which(results_row$AIC %in% sort(results_row$AIC, decreasing = F)[1:2])) # Best two results
Chull_res   <- list(which(results_row$Chull %in% sort(results_row$Chull, decreasing = T)[1:2])) # Best two results
results_matrix[ik, "AIC"][[1]]   <- AIC_res
results_matrix[ik, "Chull"][[1]] <- Chull_res
}
}
results_row
sort(results_row$Chull, decreasing = T)
results_row$Clusters[which(results_row$Chull %in% sort(results_row$Chull, decreasing = T)[1:2]]
which(results_row$Chull %in% sort(results_row$Chull, decreasing = T)[1:2])
results_row$Chull %in% sort(results_row$Chull, decreasing = T)[1:2]
AIC_res
View(results_matrix)
# 14-11-2024
# Analysis AIC + CHull
# Load libraries
library(tidyr)
# Load design matrix
# Set wd
setwd("C:/Users/perezalo/OneDrive - Tilburg University/1. Papers/Paper 2/Methodology (Journal)/Review/Simulation results/ModelSelection_Simulation/Post-Review/All (50+50)/Results")
load("design.Rdata")
# # Define relevant objects
ncond <- nrow(design) # How many conditions?
K     <- 100 # How many replications?
# Create a matrix to store the maximum scree ratio
results_matrix <- matrix(data = NA,
nrow = (ncond * K),
ncol = 5)
colnames(results_matrix)   <- c("Condition", "Replication", "AIC", "Chull", "True")
results_matrix             <- as.data.frame(results_matrix)
results_matrix$AIC         <- I(vector(mode = "list", length = 2))
results_matrix$Chull       <- I(vector(mode = "list", length = 2))
results_matrix$Condition   <- rep(x = 1:144, each = 100)
results_matrix$Replication <- rep(x = 1:100, times = 144)
results_matrix$True        <- rep(x = design$nclus, each = 100)
# Load results and input into the matrix
# Prepare new load function
loadRData <- function(fileName){
#loads an RData file, and returns it
load(fileName)
get(ls()[ls() != "fileName"])
}
setwd("C:/Users/perezalo/OneDrive - Tilburg University/1. Papers/Paper 2/Methodology (Journal)/Review/Simulation results/ModelSelection_Simulation/Post-Review/All (50+50)/Fit")
ik <- 0
for(i in 1:ncond){
for(k in 1:1){
# browser()
ik <- ik + 1
file <- list.files(pattern = paste0("^FitRow", i, "Rep", k, "-"), all.files = T)
results_row <- loadRData(file)
AIC_res     <- list(which(results_row$AIC %in% sort(results_row$AIC, decreasing = F)[1:2])) # Best two results
Chull_res   <- list(which(results_row$Chull %in% sort(results_row$Chull, decreasing = T)[1:2])) # Best two results
results_matrix[ik, "AIC"][[1]]   <- AIC_res
results_matrix[ik, "Chull"][[1]] <- Chull_res
}
}
ik <- 0
for(i in 1:ncond){
for(k in 1:100){
# browser()
ik <- ik + 1
file <- list.files(pattern = paste0("^FitRow", i, "Rep", k, "-"), all.files = T)
results_row <- loadRData(file)
AIC_res     <- list(which(results_row$AIC %in% sort(results_row$AIC, decreasing = F)[1:2])) # Best two results
Chull_res   <- list(which(results_row$Chull %in% sort(results_row$Chull, decreasing = T)[1:2])) # Best two results
results_matrix[ik, "AIC"][[1]]   <- AIC_res
results_matrix[ik, "Chull"][[1]] <- Chull_res
}
}
View(results_matrix)
load("C:/Users/perezalo/OneDrive - Tilburg University/1. Papers/Paper 2/Methodology (Journal)/Review/Simulation results/ModelSelection_Simulation/Post-Review/All (50+50)/Fit/FitRow2Rep2-1.Rdata")
results_ov
results_row
which(results_ov$Chull %in% sort(results_ov$Chull, decreasing = T)[1:2])
sort(results_ov$Chull, decreasing = T)[1:2]
# Quick evaluation, do model selection considering the results that repeats the most for both measures
results_matrix$AIC_Chull <- NA
results_matrix$AIC[1][[1]]
table(results_matrix$AIC[1][[1]], results_matrix$Chull[1][[1]])
table(c(results_matrix$AIC[1][[1]], results_matrix$Chull[1][[1]]))
which.max(table(c(results_matrix$AIC[1][[1]], results_matrix$Chull[1][[1]])))
names(which.max(table(c(results_matrix$AIC[1][[1]], results_matrix$Chull[1][[1]]))))
names(which.max(table(c(results_matrix$AIC[9900][[1]], results_matrix$Chull[9900][[1]]))))
results_matrix[9900, ]
table(c(results_matrix$AIC[9900][[1]], results_matrix$Chull[9900][[1]]))
which(table(c(results_matrix$AIC[9900][[1]], results_matrix$Chull[9900][[1]])))
a <- c(results_matrix$AIC[9900][[1]], results_matrix$Chull[9900][[1]])
a
table(a)
which(max(a) == a)
names(which(max(a) == a))
which(max(table(a)) == table(a))
max(table(a)) == table(a)
names(max(table(a)) == table(a))
b <- c(results_matrix$AIC[1][[1]], results_matrix$Chull[1][[1]])
names(max(table(b)) == table(b))
max(table(b)) == table(b)
names(which(max(table(b)) == table(b), arr.ind = T))
which(max(table(b)) == table(b), arr.ind = T)
which(max(table(b)) == table(b), arr.ind = F)
which(max(table(a)) == table(a), arr.ind = F)
which(max(table(a)) == table(a), arr.ind = T)
which.max(a)
which.max(table(a))
a
which(max(table(a)) == table(a), arr.ind = F)
which(max(table(a)) == table(a), arr.ind = F)
max(table(a)) == table(a)
sum(max(table(a)) == table(a))
sum(max(table(b)) == table(b))
ik <- 0
as.numeric("2")
# Quick evaluation, do model selection considering the results that repeats the most for both measures
results_matrix$AIC_Chull <- NA
ik <- 0
for(i in 1:ncond){
for(k in 1:100){
ik <- ik + 1
tmp_row  <- c(results_matrix$AIC[ik][[1]], results_matrix$Chull[ik][[1]]) # Extract and put into a vector the results of both measures
freq_row <- table(tmp_row) # frequency table
test     <- length(sum(max(freq_row) == freq_row)) # Which is the winner model?
if(test > 1){ # Is there no clear winner?
results_matrix$AIC_Chull[ik] <- results_matrix$Chull[ik][[1]][1] # Use the first choice from CHull (more consistent)
} else {
results_matrix$AIC_Chull[ik] <- as.numeric(names(which.max(freq_row))) # If there is a clear winner, select it
}
}
}
# FINALLY! Check if we are under- over- or correctly selecting the clusters
results_matrix$Performance <- NA
results_matrix$Performance <- ifelse(test = results_matrix$True == results_matrix$AIC_Chull, yes = 0,
no = ifelse(test = results_matrix$True < results_matrix$AIC_Chull, yes = 1,
no = -1))
a <- c(1,2,3,4)
max(a) == a
max(table(a)) == table(a)
View(results_matrix)
c(results_matrix$AIC[101][[1]], results_matrix$Chull[101][[1]])
table(c(results_matrix$AIC[101][[1]], results_matrix$Chull[101][[1]]))
a <- (table(c(results_matrix$AIC[101][[1]], results_matrix$Chull[101][[1]])))
a
length(sum(max(a) == a))
sum(max(a) == a)
# Quick evaluation, do model selection considering the results that repeats the most for both measures
results_matrix$AIC_Chull <- NA
ik <- 0
for(i in 1:ncond){
for(k in 1:100){
ik <- ik + 1
tmp_row  <- c(results_matrix$AIC[ik][[1]], results_matrix$Chull[ik][[1]]) # Extract and put into a vector the results of both measures
freq_row <- table(tmp_row) # frequency table
test     <- sum(max(freq_row) == freq_row) # Which is the winner model?
if(test > 1){ # Is there no clear winner?
results_matrix$AIC_Chull[ik] <- results_matrix$Chull[ik][[1]][1] # Use the first choice from CHull (more consistent)
} else {
results_matrix$AIC_Chull[ik] <- as.numeric(names(which.max(freq_row))) # If there is a clear winner, select it
}
}
}
# FINALLY! Check if we are under- over- or correctly selecting the clusters
results_matrix$Performance <- NA
results_matrix$Performance <- ifelse(test = results_matrix$True == results_matrix$AIC_Chull, yes = 0,
no = ifelse(test = results_matrix$True < results_matrix$AIC_Chull, yes = 1,
no = -1))
load("C:/Users/perezalo/OneDrive - Tilburg University/1. Papers/Paper 2/Methodology (Journal)/Review/Simulation results/ModelSelection_Simulation/Post-Review/All (50+50)/Fit/FitRow2Rep1-1.Rdata")
results_ov
which(results_ov$Chull %in% sort(results_ov$Chull, decreasing = T)[1:2])
sort(results_ov$Chull, decreasing = T)[1:2]
list(c(which.max(results_ov$Chull),
which(results_row$Chull %in% sort(results_ov$Chull, decreasing = T)[2]))
)
c(which.max(results_ov$Chull),
+        which(results_row$Chull %in% sort(results_ov$Chull, decreasing = T)[2]))
which.max(results_ov$Chull)
c(which.max(results_ov$Chull),
+        which(results_row$Chull == sort(results_ov$Chull, decreasing = T)[2]))
which(results_row$Chull == sort(results_ov$Chull, decreasing = T)[2]
)
c(which.max(results_ov$Chull),
+        which(results_ov$Chull == sort(results_ov$Chull, decreasing = T)[2]))
# 14-11-2024
# Analysis AIC + CHull
# Load libraries
library(tidyr)
# Load design matrix
# Set wd
setwd("C:/Users/perezalo/OneDrive - Tilburg University/1. Papers/Paper 2/Methodology (Journal)/Review/Simulation results/ModelSelection_Simulation/Post-Review/All (50+50)/Results")
load("design.Rdata")
# # Define relevant objects
ncond <- nrow(design) # How many conditions?
K     <- 100 # How many replications?
# Create a matrix to store the maximum scree ratio
results_matrix <- matrix(data = NA,
nrow = (ncond * K),
ncol = 5)
colnames(results_matrix)   <- c("Condition", "Replication", "AIC", "Chull", "True")
results_matrix             <- as.data.frame(results_matrix)
results_matrix$AIC         <- I(vector(mode = "list", length = 2))
results_matrix$Chull       <- I(vector(mode = "list", length = 2))
results_matrix$Condition   <- rep(x = 1:144, each = 100)
results_matrix$Replication <- rep(x = 1:100, times = 144)
results_matrix$True        <- rep(x = design$nclus, each = 100)
# Load results and input into the matrix
# Prepare new load function
loadRData <- function(fileName){
#loads an RData file, and returns it
load(fileName)
get(ls()[ls() != "fileName"])
}
setwd("C:/Users/perezalo/OneDrive - Tilburg University/1. Papers/Paper 2/Methodology (Journal)/Review/Simulation results/ModelSelection_Simulation/Post-Review/All (50+50)/Fit")
# Get best two results for AIC and Chull
ik <- 0
for(i in 1:ncond){
for(k in 1:100){
# browser()
ik <- ik + 1
file <- list.files(pattern = paste0("^FitRow", i, "Rep", k, "-"), all.files = T)
results_row <- loadRData(file)
AIC_res     <- list(c(which.min(results_row$AIC),
which(results_row$AIC %in% sort(results_row$AIC, decreasing = F)[1:2]))) # Best two results
Chull_res   <- list(c(which.max(results_row$Chull),
which(results_row$Chull %in% sort(results_row$Chull, decreasing = T)[2]))) # Best two results
results_matrix[ik, "AIC"][[1]]   <- AIC_res
results_matrix[ik, "Chull"][[1]] <- Chull_res
}
}
# 14-11-2024
# Analysis AIC + CHull
# Load libraries
library(tidyr)
# Load design matrix
# Set wd
setwd("C:/Users/perezalo/OneDrive - Tilburg University/1. Papers/Paper 2/Methodology (Journal)/Review/Simulation results/ModelSelection_Simulation/Post-Review/All (50+50)/Results")
load("design.Rdata")
# # Define relevant objects
ncond <- nrow(design) # How many conditions?
K     <- 100 # How many replications?
# Create a matrix to store the maximum scree ratio
results_matrix <- matrix(data = NA,
nrow = (ncond * K),
ncol = 5)
colnames(results_matrix)   <- c("Condition", "Replication", "AIC", "Chull", "True")
results_matrix             <- as.data.frame(results_matrix)
results_matrix$AIC         <- I(vector(mode = "list", length = 2))
results_matrix$Chull       <- I(vector(mode = "list", length = 2))
results_matrix$Condition   <- rep(x = 1:144, each = 100)
results_matrix$Replication <- rep(x = 1:100, times = 144)
results_matrix$True        <- rep(x = design$nclus, each = 100)
# Load results and input into the matrix
# Prepare new load function
loadRData <- function(fileName){
#loads an RData file, and returns it
load(fileName)
get(ls()[ls() != "fileName"])
}
setwd("C:/Users/perezalo/OneDrive - Tilburg University/1. Papers/Paper 2/Methodology (Journal)/Review/Simulation results/ModelSelection_Simulation/Post-Review/All (50+50)/Fit")
# Get best two results for AIC and Chull
ik <- 0
for(i in 1:ncond){
for(k in 1:100){
# browser()
ik <- ik + 1
file <- list.files(pattern = paste0("^FitRow", i, "Rep", k, "-"), all.files = T)
results_row <- loadRData(file)
AIC_res     <- list(c(which.min(results_row$AIC),
which(results_row$AIC %in% sort(results_row$AIC, decreasing = F)[2]))) # Best two results
Chull_res   <- list(c(which.max(results_row$Chull),
which(results_row$Chull %in% sort(results_row$Chull, decreasing = T)[2]))) # Best two results
results_matrix[ik, "AIC"][[1]]   <- AIC_res
results_matrix[ik, "Chull"][[1]] <- Chull_res
}
}
# 14-11-2024
# Analysis AIC + CHull
# Load libraries
library(tidyr)
# Load design matrix
# Set wd
setwd("C:/Users/perezalo/OneDrive - Tilburg University/1. Papers/Paper 2/Methodology (Journal)/Review/Simulation results/ModelSelection_Simulation/Post-Review/All (50+50)/Results")
load("design.Rdata")
# # Define relevant objects
ncond <- nrow(design) # How many conditions?
K     <- 100 # How many replications?
# Create a matrix to store the maximum scree ratio
results_matrix <- matrix(data = NA,
nrow = (ncond * K),
ncol = 5)
colnames(results_matrix)   <- c("Condition", "Replication", "AIC", "Chull", "True")
results_matrix             <- as.data.frame(results_matrix)
results_matrix$AIC         <- I(vector(mode = "list", length = 2))
results_matrix$Chull       <- I(vector(mode = "list", length = 2))
results_matrix$Condition   <- rep(x = 1:144, each = 100)
results_matrix$Replication <- rep(x = 1:100, times = 144)
results_matrix$True        <- rep(x = design$nclus, each = 100)
# Load results and input into the matrix
# Prepare new load function
loadRData <- function(fileName){
#loads an RData file, and returns it
load(fileName)
get(ls()[ls() != "fileName"])
}
setwd("C:/Users/perezalo/OneDrive - Tilburg University/1. Papers/Paper 2/Methodology (Journal)/Review/Simulation results/ModelSelection_Simulation/Post-Review/All (50+50)/Fit")
# Get best two results for AIC and Chull
ik <- 0
for(i in 1:ncond){
for(k in 1:100){
# browser()
ik <- ik + 1
file <- list.files(pattern = paste0("^FitRow", i, "Rep", k, "-"), all.files = T)
results_row <- loadRData(file)
AIC_res     <- list(c(which.min(results_row$AIC),
which(results_row$AIC %in% sort(results_row$AIC, decreasing = F)[2]))) # Best two results
Chull_res   <- list(c(which.max(results_row$Chull),
which(results_row$Chull %in% sort(results_row$Chull, decreasing = T)[2]))) # Best two results
results_matrix[ik, "AIC"][[1]]   <- AIC_res
results_matrix[ik, "Chull"][[1]] <- Chull_res
}
}
